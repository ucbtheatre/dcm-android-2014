buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
import java.util.regex.Pattern

apply plugin: 'android'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 21
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
    }

    signingConfigs {
        debug {
        }

        release {
            storeFile file("dcm-key.keystore")
            storePassword "willhines"
            keyAlias "alias_name"
            keyPassword "willhines"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    dexOptions {
        incremental true
    }
}

dependencies {
    compile 'com.google.android.gms:play-services-maps:7.5.0'
    compile 'com.android.support:appcompat-v7:19.1.+'
    compile 'com.android.support:support-v4:19.+'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.loopj.android:android-async-http:1.4.4'
    compile 'com.j256.ormlite:ormlite-core:4.48'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.8.6'
    compile 'se.emilsjolander:stickylistheaders:2.4.0'
    compile('com.crashlytics.sdk.android:answers:1.3.8@aar') {
        transitive = true;
    }
}

task('increaseVersionCode') << {
    def manifestFile = file("src/main/AndroidManifest.xml")
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()
    def versionCode = Integer.parseInt(matcher.group(1))
    def manifestContent = matcher.replaceAll("versionCode=\"" + ++versionCode + "\"")
    manifestFile.write(manifestContent)
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig') {
        task.dependsOn 'increaseVersionCode'
    }
}

